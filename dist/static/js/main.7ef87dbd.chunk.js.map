{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","registerServiceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","ProjectSummary","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","id","key","Notifications","notifications","item","user","content","time","fromNow","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","initState","authReducer","action","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","createFirestoreInstance","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7ef87dbd.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n  return (\n    <div>\n      <ul className=\"right\">\n        <li><NavLink to='/create'>New Post</NavLink></li>\n        <li><a onClick={props.signOut}>Log Out</a></li>\n        <li><NavLink to='/' className=\"btn btn btn-primary-1\">\n          {props.profile.initials}\n        </NavLink></li>\n      </ul>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n    \n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    ).then(() => {\n      dispatch({ type: 'LOGIN_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'LOGIN_ERROR', err });\n    });\n\n  }\n}\n\nexport const signOut = () => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n\n    firebase.auth().signOut().then(() => {\n      dispatch({ type: 'SIGNOUT_SUCCESS' })\n    });\n  }\n}\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email, \n      newUser.password\n    ).then(resp => {\n      return firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: newUser.firstName[0] + newUser.lastName[0]\n      });\n    }).then(() => {\n      dispatch({ type: 'SIGNUP_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'SIGNUP_ERROR', err});\n    });\n  }\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n  return (\n    <div>\n      <ul className=\"right\">\n        <li><NavLink to='/signup'>Signup</NavLink></li>\n        <li><NavLink to='/signin'>Login</NavLink></li>\n      </ul>\n    </div>\n  )\n}\n\nexport default SignedOutLinks","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport { connect } from 'react-redux'\n\nconst Navbar = (props) => {\n  const { auth, profile } = props;\n  // console.log(auth);\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\n\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to='/' className=\"brand-logo\">Travel Buzz</Link>\n        {links}\n      </div>\n    </nav>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state);\n  return{\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\nimport moment from 'moment'\n\nconst ProjectSummary = ({project}) => {\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title \">{project.title}</span>\n        <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n        <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default ProjectSummary","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\nconst ProjectList = ({projects}) => {\n  return (\n    <div className=\"project-list section\">\n      { projects && projects.map(project => {\n        return (\n          <Link to={'/project/' + project.id} key={project.id}>\n            <ProjectSummary project={project} />\n          </Link>\n        )\n      })}  \n    </div>\n  )\n}\n\nexport default ProjectList","import React from 'react'\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n  const { notifications } = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"online-users\">\n            { notifications && notifications.map(item =>{\n              return <li key={item.id}>\n                <span className=\"pink-text\">{item.user} </span>\n                <span>{item.content}</span>\n                <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\n              </li>\n            })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Notifications","import React, { Component } from 'react'\nimport ProjectList from '../projects/ProjectList'\nimport Notifications from './Notifications'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\n\n\nclass Dashboard extends Component {\n  render() {\n    const { projects, auth, notifications } = this.props;\n    if (!auth.uid) return <Redirect to='/signin' /> \n\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  // console.log(state);\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects',orderBy: ['createdAt', 'desc'] },\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\n  ])\n)(Dashboard)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\n\nconst ProjectDetails = (props) => {\n  const { project, auth } = props;\n  if (!auth.uid) return <Redirect to='/signin' /> \n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>{project.content}</p>s\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading project...</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // console.log(state);\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null\n  return {\n    project: project,\n    auth: state.firebase.auth\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{\n    collection: 'projects'\n  }])\n)(ProjectDetails)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state)\n  }\n  render() {\n    const { authError, auth } = this.props;\n    if (auth.uid) return <Redirect to='/' /> \n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"center red-text\">\n              { authError ? <p>{authError}</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return{\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n  }\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to='/' /> \n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id='firstName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id='lastName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n            <div className=\"center red-text\">\n              { authError ? <p>{authError}</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch)=> {\n  return {\n    signUp: (creds) => dispatch(signUp(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createProject } from '../../store/actions/projectActions'\nimport { Redirect } from 'react-router-dom'\n\nclass CreateProject extends Component {\n  state = {\n    title: '',\n    content: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(this.state);\n    this.props.createProject(this.state);\n    this.props.history.push('/');\n  }\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to='/signin' /> \n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\n          <div className=\"input-field\">\n            <input type=\"text\" id='title' onChange={this.handleChange} />\n            <label htmlFor=\"title\">Project Title</label>\n          </div>\n          <div className=\"input-field\">\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n            <label htmlFor=\"content\">Project Content</label>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1\">Create</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createProject: (project) => dispatch(createProject(project))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","export const createProject = (project) => {\n  return (dispatch, getState, {getFirestore}) => {\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    firestore.collection('projects').add({\n      ...project,\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorId,\n      createdAt: new Date()\n    }).then(() => {\n      dispatch({ type: 'CREATE_PROJECT_SUCCESS' });\n    }).catch(err => {\n      dispatch({ type: 'CREATE_PROJECT_ERROR' }, err);\n    });\n  }\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/'component={Dashboard} />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={CreateProject} />\n\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","const initState = {\n  authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n  switch(action.type){\n    case 'LOGIN_ERROR':\n      console.log('login error');\n      return {\n        ...state,\n        authError: 'Login failed'\n      }\n    case 'LOGIN_SUCCESS':\n      console.log('login success');\n      return {\n        ...state,\n        authError: null\n      }\n    case 'SIGNOUT_SUCCESS':\n      console.log('signout success');\n      return state\n    default:\n      return state\n  }\n};\n\nexport default authReducer;","const initState = {\n    projects: [\n      {id: '1', title: 'help me find peach', content: 'blah blah blah'},\n      {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\n      {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\n    ]\n  }\n  \n  const projectReducer = (state = initState, action) => {\n    switch (action.type) {\n      case 'CREATE_PROJECT_SUCCESS':\n        console.log('create project success');\n        return state;\n      case 'CREATE_PROJECT_ERROR':\n        console.log('create project error');\n        return state;\n      default:\n        return state;\n    }\n  };\n  \n  export default projectReducer;","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyBHbU4UzIpCQeewUcfr0QQMkPPgiP8n_tw\",\n    authDomain: \"travelblog-56d54.firebaseapp.com\",\n    databaseURL: \"https://travelblog-56d54.firebaseio.com\",\n    projectId: \"travelblog-56d54\",\n    storageBucket: \"travelblog-56d54.appspot.com\",\n    messagingSenderId: \"12361207090\",\n    appId: \"1:12361207090:web:5e4d40113c2bc743eb5b2b\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.firestore().settings({timestampsInSnapshots:true})\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\n\nimport firebase from 'firebase/app'\nimport { createFirestoreInstance } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase'\n\n\n\nconst store = createStore(\n  rootReducer,\n  compose(\n      applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n      reduxFirestore(firebase, fbConfig)\n  )\n);\n\nconst rrfProps = {\n  firebase,\n  config: fbConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\nReactDOM.render(\n  <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n          <App />\n      </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n// });\n"],"sourceRoot":""}